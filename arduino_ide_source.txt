#include "ESP8266WiFi.h"
#include "ESP8266WebServer.h"
const int buzzer =  4;

ESP8266WebServer server(80);

String getPage(){
  String page = "<!DOCTYPE html>";
  page += "<html lang=fr-FR>";
  page += "<head>";
  page += "<meta http-equiv='Content-Type' content='text/html; charset=utf-8'/>";
  page += "<title>ESP8266 - HelloWorldMotherFucker</title>";
  page += "<style> body { background-color: #fffff; font-family: Arial, Helvetica, Sans-Serif; Color: #000088; }</style>";
  page += "</head>";
  page += "<body>";
  page += "<center><h1>ESP8266 - HelloWorldMotherFucker</h1></center>";
  page += "<center><p>Mini serveur web hébergé sur un module ESP8266</p></center>";
  page += "<center><button class='' type='button'> Morse </button></center>";
  page += "<center><p><img src='http://jppougaud.free.fr/esp8266/esp8266.png' alt='esp8266'></p>";
  page += "<center><p>Return 0</p></center>";
  page += "</body>";
  page += "</html>";
  return page;
}
 
void setup() {
  pinMode(buzzer, OUTPUT);
  Serial.begin(115200);
  WiFi.begin("Livebox-7ECF", "C9454920A09AA0353E0468654A");  //Connect to the WiFi network
 
  while (WiFi.status() != WL_CONNECTED) {  //Wait for connection
 
    delay(500);
    Serial.println("Waiting to connect…");
 
  }
 
  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());  //Print the local IP
 
  server.on("/other", []() {   //Define the handling function for the path
 
    server.send(200, "text / plain", "Other URL");
 
  });
 
  server.on("/", handleRootPath);    //Associate the handler function to the path
  server.begin();                    //Start the server
  Serial.println("Server listening");
 
}
 
void loop() {

  server.handleClient();         //Handling of incoming requests
 
}
 
void handleRootPath() {            //Handler for the rooth path
 
  server.send(200, "text/html", getPage() );
 
}

void buzz() {

  digitalWrite(buzzer, HIGH);
  delay(500);
  digitalWrite(buzzer, LOW);
  delay(200); 
  
}
